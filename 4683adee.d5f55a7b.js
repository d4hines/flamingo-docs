(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{65:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return u}));var r=n(2),a=n(6),i=(n(0),n(80)),o={title:"Architecture Overview \ud83c\udfdb\ufe0f",sidebar_label:"Architecture Overveiw"},c={unversionedId:"todomvc/architecture",id:"todomvc/architecture",isDocsHomePage:!1,title:"Architecture Overview \ud83c\udfdb\ufe0f",description:"Before we get into the nitty-gritty, a high-level overview of",source:"@site/docs\\todomvc\\architecture.md",permalink:"/docs/todomvc/architecture",editUrl:"https://github.com/flamingo-lang/flamingo-docs/edit/master/docs/todomvc/architecture.md",sidebar_label:"Architecture Overveiw",sidebar:"sidebar",previous:{title:"Intro \ud83d\udcc3",permalink:"/docs/todomvc/intro"},next:{title:"Encoding the Spec \ud83e\udd16",permalink:"/docs/todomvc/encoding"}},s=[],l={rightToc:s};function u(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Before we get into the nitty-gritty, a high-level overview of\nthe architecture of Flamingo+React apps will help us keep our\nbearings. "),Object(i.b)("p",null,"Flamingo uses the ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://krasimirtsonev.com/blog/article/dissection-of-flux-architecture-or-how-to-write-your-own-react"}),Object(i.b)("em",{parentName:"a"},"Flux Architecture")),".\nThe Flux Architecture\nis really just the ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://guide.elm-lang.org/architecture/"}),"Elm Architecture"),", which is refined,\nminimalistic version of\n",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Functional_reactive_programming"}),"Functional Reactive Programming"),"."),Object(i.b)("p",null,"As a quick refresher, the basic idea is a ",Object(i.b)("em",{parentName:"p"},"unidirectional flow of data"),", as in this diagram:\n",Object(i.b)("img",Object(r.a)({parentName:"p"},{src:"https://krasimirtsonev.com/blog/article/dissection-of-flux-architecture-or-how-to-write-your-own-react/assets/fluxiny_basic_flux_architecture.jpg",alt:null})),"."),Object(i.b)("p",null,"Note that:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"The views dispatch actions as result of DOM events, etc."),Object(i.b)("li",{parentName:"ul"},"The dispatcher updates the store."),Object(i.b)("li",{parentName:"ul"},"The store updates its state based on pure functions. This makes\nstate transitions predicable and easy to test."),Object(i.b)("li",{parentName:"ul"},"The updated state is pushed to the views via queries, resulting in\nthe display of a new state, and the cycle repeats.")),Object(i.b)("p",null,'Additionally, "side-band" actions can occur from HTTP events, etc (hence\nthe lone action in bottom-left field in the diagram).'),Object(i.b)("p",null,"As it turns out, decades before we were all writing React, the AI/robotics\nresearch community called this pattern the Sense-Think-Act:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"The agent (think robot) ",Object(i.b)("em",{parentName:"li"},"senses")," his environment. In our case, he\nmight observe a DOM event."),Object(i.b)("li",{parentName:"ul"},"The agent ",Object(i.b)("em",{parentName:"li"},"thinks")," about how to respond. The Flamingo runtime will\nuse your ALM specification to do this."),Object(i.b)("li",{parentName:"ul"},"The agent ",Object(i.b)("em",{parentName:"li"},"acts")," accordingly. This corresponds to updating the DOM\nin our views.")),Object(i.b)("p",null,"In our case, the ",Object(i.b)("em",{parentName:"p"},"think")," act is very simple - the only DOM only\nhas to do a single update, and then it can rest, waiting for the\nnext user input. In its traditional setting, ALM was used to do\n",Object(i.b)("em",{parentName:"p"},"planning"),", where the agent comes up with a sequence of actions\nto perform to achieve some desired goal. Maybe in the future\nFlamingo will be used for robotics and video games, but for now,\nwe'll stick to UI."),Object(i.b)("p",null,"Speaking of, our basic structure will be this:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"At the top level of our program, we'll create a ",Object(i.b)("em",{parentName:"li"},"session"),", an\nin-memory database you can query and update via actions."),Object(i.b)("li",{parentName:"ul"},"We'll pass this session to all our components via ",Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"https://reactjs.org/docs/context.html"}),"React Context"),"."),Object(i.b)("li",{parentName:"ul"},"Components will query the session for whatever data they need by subscribing via hooks."),Object(i.b)("li",{parentName:"ul"},"Components will dispatch actions to update the state.")),Object(i.b)("p",null,'The third bullet point is a major difference between, Flamingo and, say, Redux. In Redux,\nthe typical pattern is to have a few "smart components" that retrieve data from the store\nvia selectors, and then feed the data as well as any callbacks to many "dumb components" by\nprop-drilling.'),Object(i.b)("p",null,"By contrast, in Flamingo, we can express very precise, powerful queries in the same language\nas writing axioms. This eliminates the need for selectors entirely - queries ",Object(i.b)("em",{parentName:"p"},"are"),' the selectors.\nAdditionally, in this TodoMVC example, every component queries for its own data, making every\ncomponent a "smart component". Who knows? Maybe this a terrible idea - Flamingo best practices\nare still yet to be discovered and codified. But I offer two items in defense of this integrated\napproach:'),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"This dramatically reduces the amount of boilerplate needed. Compared with the React Hooks\nexample this code was forked from, the Flamingo version is nearly 1/2 as much code."),Object(i.b)("li",{parentName:"ul"},"While this technically ruins some of the blissful simplicity of testing dumb components,\nit makes it easy to move ",Object(i.b)("em",{parentName:"li"},"all")," the logic into Flamingo, where we have far more powerful\nverification tools.")),Object(i.b)("p",null,"Flamingo is an adventure in finding the sweet-spot among the opposing forces of code agility,\nformal verification, and maintainability. We're still figuring it all out, so let us know\nif you have opinions!"))}u.isMDXComponent=!0},80:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return h}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),u=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=u(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=u(n),m=r,h=p["".concat(o,".").concat(m)]||p[m]||b[m]||i;return n?a.a.createElement(h,c(c({ref:t},l),{},{components:n})):a.a.createElement(h,c({ref:t},l))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var l=2;l<i;l++)o[l]=n[l];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);